{"ast":null,"code":"var _jsxFileName = \"/home/dci/WebDev/projects/WheresWaldo/client/src/Components/Levels/Level2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Level2() {\n  _s();\n\n  const [coordsY, setCoordsY] = useState([]);\n  const [coordsX, setCoordsX] = useState([]);\n  useEffect(() => {\n    axios.get(\"/API/level2\").then(res => {\n      setCoordsY(res.data.coordsY);\n      setCoordsX(res.data.coordsX);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Level2, \"qtKXkSjTouayive245F5A2wKtDY=\");\n\n_c = Level2;\nexport default Level2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Level2\");","map":{"version":3,"sources":["/home/dci/WebDev/projects/WheresWaldo/client/src/Components/Levels/Level2.jsx"],"names":["React","useState","axios","Level2","coordsY","setCoordsY","coordsX","setCoordsX","useEffect","get","then","res","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAO,EAAAA,SAAS,CAAC,MAAM;AACfN,IAAAA,KAAK,CAACO,GAAN,CAAU,aAAV,EAAyBC,IAAzB,CAA8BC,GAAG,IAAI;AACpCN,MAAAA,UAAU,CAACM,GAAG,CAACC,IAAJ,CAASR,OAAV,CAAV;AACAG,MAAAA,UAAU,CAACI,GAAG,CAACC,IAAJ,CAASN,OAAV,CAAV;AACA,KAHD;AAIA,GALQ,EAKN,EALM,CAAT;AAMA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GAXQH,M;;KAAAA,M;AAaT,eAAeA,MAAf","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\n\nfunction Level2() {\n\tconst [coordsY, setCoordsY] = useState([]);\n\tconst [coordsX, setCoordsX] = useState([]);\n\n\tuseEffect(() => {\n\t\taxios.get(\"/API/level2\").then(res => {\n\t\t\tsetCoordsY(res.data.coordsY);\n\t\t\tsetCoordsX(res.data.coordsX);\n\t\t});\n\t}, []);\n\treturn <div></div>;\n}\n\nexport default Level2;\n"]},"metadata":{},"sourceType":"module"}